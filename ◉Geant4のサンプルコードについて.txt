◉Geant4のサンプルコードについて
◉各フォルダの説明
build：CMakeでビルドしたファイルが入るディレクトリ。実行ファイル exampleB1 もここに作られる。通常は手動で編集しない。
include	：ヘッダファイル（.hh）が入るフォルダ。各クラスのインターフェースが定義される。
src：ソースファイル（.cc）が入るフォルダ。Geant4クラスの実装がここにある（例：DetectorConstruction.ccなど）。


◉ビルドとは
ビルドとは、ソースコード（人間が書いたプログラム）をコンピュータが実行できる形に変換する作業のことです。
人間が書いたコード（C++など）は、そのままではコンピュータに理解できません。
ビルドによって、機械語の実行ファイルに変換することで、はじめて実行できるようになります。
Geant4では、.ccファイル（C++のソースコード）を実行可能なプログラム（例：exampleB1）に変える工程を「ビルド」と呼びます。
1. CMakeで設定
どのファイルを使うか
どんなライブラリ（Geant4など）を使うか
を自動で調べて設定します（Makefileという設計図を作る）。
2. makeでコンパイル
exampleB1.cc や src/のファイルを「翻訳（コンパイル）」して、バイナリにします。
最終的に build フォルダ内に 実行可能ファイル exampleB1 が作られます。
3. 作られるもの
exampleB1：実行可能なプログラム。これを実行するとシミュレーションが動く。
中間ファイル（.oなど）：コンパイル中に作られる一時的なファイル（通常は隠れてる）。
CMakeFilesなど	：CMakeが使う補助ファイル群。


◉各ファイルの説明（プロジェクト直下）
.README.txt：サンプルの使い方や目的の簡単な説明。中を見ると概要がわかる。
CMakeLists.txt：CMakeの設定ファイル。コンパイル対象ファイルやライブラリを指定する。ビルドに必須。
exampleB1.cc：メイン関数。Geant4アプリケーションのスタート地点で、RunManagerなどを初期化している。
exampleB1.in / exampleB1.out：入出力用のサンプルファイル。標準入出力の確認用に使われるが、特に編集不要なことが多い。
GNUmakefile：古いGeant4ビルド方法（CMakeではなくMakeを使うとき）用のファイル。今は通常使わない。
History	：サンプルの更新履歴。何がいつ変わったかの記録。開発者向け。
README：このサンプルの目的や構成を簡単に解説したドキュメント（.README.txtと似ているが内容が違うことも）。


◉マクロファイル（.mac）
Geant4において「マクロファイル（.macファイル）」とは、複数のコマンドをまとめて記述したテキストファイルです。
シミュレーションの設定や実行操作を、自動的にまとめて実行するために使われます。
手作業でコマンドを一つずつ入力しなくてよい
実験条件を保存・再現できる
スクリプトのように繰り返し利用できる

init_vis.mac：初期化時に実行されるマクロ。視覚化やビューワーの初期設定が書かれている。
vis.mac	：視覚化専用マクロ。描画やカメラ角度などを設定する。
run1.mac：実験条件やビーム条件（粒子の種類、エネルギーなど）を指定して、一定数イベントを走らせる。
run2.mac：run1.macと異なる条件の実行例。比較実験や別条件用のプリセット。

実行方法（マクロを使う場合）
./exampleB1 run1.mac
のようにすれば、run1.macの内容が自動で実行されます。