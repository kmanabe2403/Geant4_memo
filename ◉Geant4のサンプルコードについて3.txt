◉Geant4のサンプルコードについて3

B1：最小限の構成（あなたがすでに動かしたサンプル）
目的：Geant4プログラムの構造の理解
機能：
検出器（Box）を作成
電子を撃ち出す
可視化あり（マクロで実行）
学べること：
DetectorConstruction や PrimaryGeneratorAction の基本
マクロファイルの使い方
最小限のGeant4プログラム構造


B2：ヒットとスコアリングの導入
目的：粒子がどこを通過したか、エネルギー損失などを記録
機能：
検出器の中に「感知領域（SensitiveDetector）」を作る
エネルギー損失やヒット位置を記録する
学べること：
G4VSensitiveDetector の実装
G4Step を使ったヒット情報の取得
G4HCofThisEvent などによるヒットの蓄積


B3：Run／Event／Steppingごとのアクション導入
目的：シミュレーションの各段階で情報を処理する方法を学ぶ
機能：
各ステップ（ステッピング）、イベント、ランの開始/終了時に出力を追加
学べること：
RunAction：1回のrunの前後で何をするか
EventAction：1イベントごとに処理
SteppingAction：1ステップごとに処理（例えばどこを通ったか、など）


B4：より複雑なジオメトリとスコアリング
目的：複数の検出器や複雑な幾何構造の扱い
機能：
複数の感知領域
座標や複雑な構造を持つジオメトリ
学べること：
多重配置、ローテーション
スコアリングの応用的な使い方


B5：Ntuple出力（ROOTやCSVへの出力）
目的：ヒット情報などを ファイルに保存して解析 する方法
機能：
G4AnalysisManager を使ってエネルギーなどを記録
CSV や ROOT 形式でデータ保存
学べること：
G4AnalysisManager::CreateNtuple() などのデータ出力方法
実験データのような解析の準備

